name: MERN App CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  node-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './client/package-lock.json'  # Adjust if needed

      - name: Install dependencies
        run: npm ci
        working-directory: ./client  # or remove if package.json is in root

      - name: Build the app
        run: npm run build --if-present
        working-directory: ./client

      - name: Run tests
        run: npm test
        working-directory: ./client

  docker-build-push:
    needs: node-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t prathamesh1603/mern-app:latest .

      - name: Push Docker image
        run: docker push prathamesh1603/mern-app:latest

  deploy:
    needs: docker-build-push
    runs-on: self-hosted
    steps:
      - name: Pull Docker image
        run: docker pull prathamesh1603/mern-app:latest

      - name: Remove old container
        run: docker rm -f mern-app-container || true

      - name: Run new container
        run: |
          docker run -d -p 3000:3000 -p 5000:5000 \
            --name mern-app-container \
            -e MONGO_URI=${{ secrets.MONGODB_URI }} \
            prathamesh1603/mern-app:latest
